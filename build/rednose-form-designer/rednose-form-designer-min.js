YUI.add("rednose-form-designer",function(Y,NAME){var ConfigureItems;ConfigureItems=Y.Base.create("configureItems",Y.Widget,[Y.Rednose.Dialog],{template:'<div>   <div class="control-group">   </div></div>',_table:null,render:function(){var e=this,t=Y.Node.create(this.template),n=this.get("model").get("properties"),r=[];n.choices&&Y.Object.each(n.choices,function(e,t){r.push({label:e,value:t})}),this._table=new Y.Rednose.DataTable({columns:[{key:"label",label:"Label",editable:!0},{key:"value",label:"Value",editable:!0}],data:r}),this._table.render(t.one(".control-group")),t.one(".control-group").setStyle("width","630px;"),this.prompt({title:"Configure items: "+this.get("model").get("caption"),html:t},function(t){var n={},r=e.get("model").get("properties"),i=e._table.hasPlugin("editable").getData();i.each(function(e){n[e.get("value")]=e.get("label")}),r.choices=n,e.get("model").set("properties",r),e.destroy()}),this._table.plug(Y.Rednose.DataTableEditRowPlugin),this._table.plug(Y.Rednose.DataTableSelectPlugin),this.addButtons([{value:"",icon:"icon-plus",position:"left",callback:function(){e._addItem()}},{value:"",icon:"icon-remove",position:"left",callback:function(){e._removeItem()}}])},_addItem:function(){var e=this._table.get("data");e.add({name:"",value:""})},_removeItem:function(){var e=this._table.hasPlugin("selectable").getSelection();e&&e.destroy()}},{ATTRS:{model:{value:null}}}),Y.namespace("Rednose.FormDesigner").ConfigureItems=ConfigureItems;var TXT_OBJECT_LIBRARY="Object Library",EVT_SELECT="select",ObjectLibrary,ObjectLibraryView;ObjectLibrary=Y.Base.create("objectLibrary",Y.Widget,[],{render:function(e,t){var n=this,r=this.get("items"),i=e.getNode(t).get("parentNode");e.createDropdown(i,r);for(var s in r)e.on(r[s].id,function(e){var t=e.type.split(":")[1];for(var i in r)r[i].id==t&&n.fire("objectAdd",{item:r[i]})});return this}},{ATTRS:{items:{value:[{id:"text",title:"Text",icon:"rednose-icon-text"},{id:"textarea",title:"Text Area",icon:"rednose-icon-textarea"},{id:"richtext",title:"Rich Text",icon:"rednose-icon-textarea"},{id:"dropdown",title:"Drop-down List",icon:"rednose-icon-dropdown"},{id:"radio",title:"Radio Button",icon:"rednose-icon-radio"},{id:"checkbox",title:"Checkbox",icon:"rednose-icon-checkbox"},{id:"date",title:"Date",icon:"rednose-icon-date"},{id:"autocomplete",title:"Autocomplete",icon:"rednose-icon-dropdown"},{id:"file",title:"File",icon:"rednose-icon-dropdown"}]}}}),ObjectLibraryView=Y.Base.create("objectLibraryView",Y.View,[Y.Rednose.Dialog],{template:'<div>   <div class="control-group">       <label for="input" class="control-label">Name</label>       <div class="controls">           <input type="text" data-path="name" value="" id="name">       </div>   </div>   <div class="control-group">       <label for="input" class="control-label">Identifier</label>       <div class="controls">           <input type="text" data-path="foreignId" id="foreignId" />       </div>   </div></div>',render:function(){var e=this,t=this.get("item").title,n=this.get("item").id,r=Y.Node.create(this.template),i=r.one("#foreignId");r.one("input[data-path=name]").on(["keyup","change"],function(t){e._autoFillForeignId(t,i)}),r.one("input[data-path=foreignId]").on(["keyup","change"],function(t){e._foreignIdChange(t)}),this.prompt({title:"Add a new "+t,html:r},function(t){var r=new Y.Rednose.Form.ControlModel({caption:t.one("[data-path=name]").get("value"),foreignId:t.one("[data-path=foreignId]").get("value"),type:n});e.get("model").get("controls").add(r),e.destroy()})},_autoFillForeignId:function(e,t){var n=this._cleanString(e.target.get("value"));t.hasAttribute("data-noautofill")===!1&&t.set("value",n)},_foreignIdChange:function(e){var t=this._cleanString(e.target.get("value"));e.target.set("value",t),e.target.setAttribute("data-noautofill","true"),t===""&&e.target.removeAttribute("data-noautofill")},_cleanString:function(e){return e.replace(/ /g,"_").replace(/\W/g,"_")}},{ATTRS:{item:{value:{}},model:{value:null}}}),Y.namespace("Rednose.FormDesigner").ObjectLibrary=ObjectLibrary,Y.namespace("Rednose.FormDesigner").ObjectLibraryView=ObjectLibraryView;var TXT_HIERARCHY="Hierarchy",HierarchyView,EVT_SELECT="select";HierarchyView=Y.Base.create("hierarchyView",Y.View,[],{template:'<div class="rednose-hierarchy></div>',_treeView:null,initializer:function(){var e=this.get("container"),t=this.template;e.setHTML(t)},destructor:function(){this._treeView.destroy(),this._treeView=null},render:function(){var e=this,t=this.get("container"),n=this.get("model");return this._treeView&&this._treeView.destroy(),t.append('<div class="rednose-treeview"></div>'),this._treeView=new Y.Rednose.TreeView({container:t.one(".rednose-treeview"),model:n.getTree(),selectable:!0,header:TXT_HIERARCHY}),Y.Array.each(e._treeView.rootNode.children,function(e){e.open()}),this._treeView.render(),this._treeView.after("select",function(t){var n=t.node.data;n&&n instanceof Y.Rednose.Form.ControlModel?e.fire(EVT_SELECT,{model:n}):e.fire(EVT_SELECT,{model:null})}),this},_setModel:function(e){var t=e.get("controls");t.after("add",this.render,this)}},{ATTRS:{model:{value:new Y.Rednose.Form.FormModel,setter:"_setModel"}}}),Y.namespace("Rednose.FormDesigner").HierarchyView=HierarchyView;var TXT_DATA_SOURCES="Data Sources",TXT_DATA_SOURCE_EDIT="Edit Data Source",TXT_DATA_SOURCE_DELETE="Delete Data Source",DataSource=Y.Rednose.DataSource.DataSource,DataSourcesView;DataSourcesView=Y.Base.create("dataSourcesView",Y.View,[],{template:'<div class="rednose-data-sources></div>',events:{".yui3-treeview-row":{contextmenu:"_handleContextMenu"}},_treeView:null,initializer:function(){var e=this.get("container"),t=this.template;e.setHTML(t)},destructor:function(){this._treeView.destroy(),this._treeView=null},render:function(){var e=this,t=this.get("container"),n=this.get("modelList");return this._treeView&&this._treeView.destroy(),t.append('<div class="rednose-treeview"></div>'),n.load(function(){e._treeView=new Y.Rednose.TreeView({container:t.one
(".rednose-treeview"),model:n.getTree(),selectable:!1,header:TXT_DATA_SOURCES}),e._treeView.render()}),this},_handleContextMenu:function(e){var t=e.currentTarget;e.preventDefault();if(t.contextMenu)return!1;var n=this._treeView.getNodeById(t.getData("node-id")).data;n instanceof DataSource&&(t.plug(Y.Rednose.ContextMenu,{content:[{title:TXT_DATA_SOURCE_EDIT,id:"dataSourceEdit"},{title:"-"},{title:TXT_DATA_SOURCE_DELETE,id:"dataSourceDelete"}],data:n,bubbleTarget:this}),t.contextMenu._handleContextMenu(e))}},{ATTRS:{modelList:{value:new Y.Rednose.DataSource.DataSourceList}}}),Y.namespace("Rednose.FormDesigner").DataSourcesView=DataSourcesView;var TXT_CONTROL_TYPES={text:"Text",textarea:"Text Area",html:"Rich Text",dropdown:"Drop-down List",radio:"Radio Button",checkbox:"Checkbox",date:"Date",autocomplete:"Autocomplete",file:"File"},TXT_OBJECT_ATTRIBUTES="Object Attributes",Micro=Y.Template.Micro,ObjectAttributesView;ObjectAttributesView=Y.Base.create("objectAttributesView",Y.View,[Y.Rednose.View.Nav],{title:TXT_OBJECT_ATTRIBUTES,footer:!1,formTemplate:Micro.compile('<form class="form-vertical"><fieldset><div class="control-group"><label class="control-label" for="id">Identifier</label><div class="controls"><input class="input-block-level" id="id" type="text" readonly value="<%= data.foreignId %>"/></div></div><div class="control-group"><label class="control-label" for="caption">Caption</label><div class="controls"><input class="input-block-level" id="caption" type="text" value="<%= data.caption %>"/></div></div><div class="control-group"><label class="control-label" for="value">Value</label><div class="controls"><input class="input-block-level" id="value" type="text" value="<%= data.value %>"/></div></div><hr/><div class="control-group"><label class="control-label" for="type">Type</label><div class="controls"><select class="input-block-level" id="type"></select></div></div><% if (data.type == \'dropdown\' || data.type == \'radio\') { %><div class="control-group"><label class="control-label" for="type"></label><div class="controls"><input type="button" class="btn" value="Configure items" id="configureItems" /></div></div><% } %><hr/><div class="control-group"><div class="controls"><label class="checkbox"><input type="checkbox" id="required" <% if (data.required) { %>checked<% } %>> Required</label></div></div><div class="control-group"><div class="controls"><label class="checkbox"><input type="checkbox" id="visible" <% if (data.visible) { %>checked<% } %>> Visible</label></div></div><div class="control-group"><div class="controls"><label class="checkbox"><input type="checkbox" id="protected" <% if (data.protected) { %>checked<% } %>> Protected</label></div></div><div class="control-group"><div class="controls"><label class="checkbox"><input type="checkbox" id="readonly" <% if (data.readonly) { %>checked<% } %>> Readonly</label></div></div><fieldset></form>'),emptyTemplate:'<div class="alert alert-info">No attributes available</div>',events:{form:{change:"_handleFormChange"},"#configureItems":{click:"_handleConfigureItems"}},render:function(){return this._renderForm(),this},_renderForm:function(){var e=this,t=this.get("model"),n=this.get("container");n.empty(),t?(n.append(this.formTemplate(t.getAttrs())),this._renderTypeOptions()):n.append(this.emptyTemplate)},_renderTypeOptions:function(){var e=this.get("model"),t=this.get("container").one("#type");Y.Object.each(TXT_CONTROL_TYPES,function(n,r){var i=Y.Node.create(Y.Lang.sub('<option value="{value}">{label}</option>',{value:r,label:n}));e.get("type")===r&&i.setAttribute("selected","selected"),t.append(i)})},_handleFormChange:function(e){var t=e.target,n=t.get("id"),r=t.get("type")==="checkbox"?t.get("checked"):t.get("value");this.get("model").set(n,r),n=="type"&&this.fire("typeChange")},_handleConfigureItems:function(){this.fire("configureItems",{model:this.get("model")})}},{ATTRS:{model:{value:null}}}),Y.namespace("Rednose.FormDesigner").ObjectAttributesView=ObjectAttributesView;var FormView;FormView=Y.Base.create("formView",Y.View,[],{template:'<div class="rednose-form-view"><form class="rednose-form form-horizontal"><fieldset><legend>{caption}</legend></fieldset></form></div>',_controlViewMap:{},_expressionMap:[],_controlMap:[],initializer:function(){var e=this.get("model"),t=e.get("controls");t.after("add",this._handleAddControl,this)},destructor:function(){Y.Array.each(this._controlMap,function(e){e.destroy(),e=null}),this._expressionMap=null},render:function(){var e=this,t=this.get("container"),n=this.get("model"),r=this.template;return this._controlViewMap=[],this._expressionMap=[],t.setHTML(Y.Lang.sub(r,{caption:n.get("caption")})),n.get("controls").each(function(t){e._renderControl(t)}),this},_renderControl:function(e){var t=this.get("container"),n=Y.Rednose.Form.ControlViewFactory.create(e),r=this;n&&(r._controlViewMap[e.get("id")]=n,e.view=n,n.addTarget(r),n.after("*:change",function(){}),t.one("fieldset").append(n.render().get("container")),this._controlMap.push(n))},_evalutateExpressions:function(){var self=this,objectDefinitions=[];Y.Object.each(this._controlViewMap,function(e){var t=e.get("model").get("foreignId"),n=Y.JSON.stringify(e.get("model").toJSON());objectDefinitions.push(t+" = "+n)});var lines=[];lines.push("var "+objectDefinitions.join(", ")+";"),lines.push(this._expressionMap.join(" "));var objectMappings=[];Y.Object.each(this._controlViewMap,function(e){var t=e.get("model").get("id");objectMappings.push('"'+t+'": '+t)}),lines.push("var objects = {"+objectMappings.join(", ")+"};");var objects;eval(lines.join(" ")),Y.Object.each(objects,function(e,t){var n=self._controlViewMap[t].get("model");n.setAttrs(e),self._controlViewMap[t].render()})},_handleAddControl:function(e){this._renderControl(e.model)}},{ATTRS:{model:{value:new Y.Rednose.Form.FormModel}}}),Y.namespace("Rednose.FormDesigner").FormView=FormView;var TXT_NAVBAR_CAPTION="Form Designer",DataSourceManager=Y.Rednose.DataSourceManager.DataSourceManager,FormDesigner
;FormDesigner=Y.Base.create("formDesigner",Y.App,[Y.Rednose.Template.ThreeColumn],{views:{form:{type:Y.Rednose.FormDesigner.FormView}},_navbar:null,_objectLibrary:null,_hierarchyView:null,_objectAttributesView:null,_dataSourcesView:null,initializer:function(){this._objectLibrary=new Y.Rednose.FormDesigner.ObjectLibrary,this._hierarchyView=new Y.Rednose.FormDesigner.HierarchyView,this._objectAttributesView=new Y.Rednose.FormDesigner.ObjectAttributesView,this._dataSourcesView=new Y.Rednose.FormDesigner.DataSourcesView,this._objectLibrary.addTarget(this),this._hierarchyView.addTarget(this),this._objectAttributesView.addTarget(this),this._dataSourcesView.addTarget(this),this.after("hierarchyView:select",this._handleControlSelect,this),this.after("objectLibrary:objectAdd",this._handleObjectAdd,this),this.after("objectAttributesView:typeChange",this._handleObjectTypeChange,this),this.after("objectAttributesView:configureItems",this._handleConfigureItems,this),this._initNavbar(),this.on("navbar:preview",this._handlePreview,this),this.on("navbar:save",this._handleSave,this),this.on("navbar:newDataSource",this._handleNewDataSource,this),this.on("navbar:closeDesigner",this._handleClose,this),this.on("contextMenu:dataSourceEdit",this._handleDataSourceEdit,this),this.on("contextMenu:dataSourceDelete",this._handleDataSourceDelete,this),this.hasRoute(this.getPath())&&this.dispatch()},destructor:function(){this.get("activeView")&&this.get("activeView").destroy(),this._navbar.destroy(),this._navbar=null,this._objectLibrary.destroy(),this._objectLibrary=null,this._hierarchyView.destroy(),this._hierarchyView=null,this._dataSourcesView.destroy(),this._dataSourcesView=null,this._objectAttributesView.destroy(),this._objectAttributesView=null},render:function(){return FormDesigner.superclass.render.apply(this,arguments),this.get("container").addClass("rednose-form-designer"),this._navbar.render(this.get("container")),this._objectLibrary.render(this._navbar,"insert"),this.get("gridLeft").append(this._hierarchyView.render().get("container")),this.get("gridLeft").append(this._dataSourcesView.render().get("container")),this.get("gridRight").append(this._objectAttributesView.render().get("container")),this.get("model").get("controls").size()>0&&this.showForm(),this},_initNavbar:function(){this._navbar=new Y.Rednose.Navbar({title:TXT_NAVBAR_CAPTION,columnLayout:!0,menu:[{title:"File",items:[{id:"newDataSource",title:"New Data Source..."},{title:"-"},{id:"preview",title:"Preview"},{id:"save",title:"Save"},{title:"-"},{id:"closeDesigner",title:"Close"}]},{id:"insert",title:"Insert"}],menuSecondary:[{title:YUI.Env.user.name,icon:"user",items:[{url:Routing.generate("_security_logout"),title:"Sign out"}]}]}),this._navbar.addTarget(this),this.set("navbar",this._navbar)},handleForm:function(e,t,n){var r=e.params.form,i=this.get("model"),s=this;r===i.get("id")&&!i.isNew()?(e.form=i,n()):(i=new Y.Rednose.Form.FormModel({id:r}),i.load(function(){s.set("model",i),e.form=i,n()}))},showForm:function(e,t){this.get("activeView")&&this.get("activeView").destroy(),e||(e={form:this.get("model")},t={transition:!1}),this.showView("form",{model:e.form},{transition:t.transition}),this._hierarchyView.set("model",e.form),this._hierarchyView.render()},_handleControlSelect:function(e){var t=e.model;t&&t instanceof Y.Rednose.Form.ControlModel&&t.view instanceof Y.Rednose.Form.BaseControlView&&t.view.focus(),this._objectAttributesView.set("model",t),this._objectAttributesView.render()},_handleObjectTypeChange:function(){this.showForm(),this._handleControlSelect({model:this._objectAttributesView.get("model")})},_handleConfigureItems:function(e){var t=new Y.Rednose.FormDesigner.ConfigureItems({model:e.model});t.render()},_handleObjectAdd:function(e){var t=this,n=new Y.Rednose.FormDesigner.ObjectLibraryView({model:this.get("model"),item:e.item});n.on("destroy",function(){t.showForm()}),n.render()},_handleSave:function(){var e=this.get("model");console.log(Y.JSON.stringify(e.toJSON()))},_handlePreview:function(){var e=this.get("model");window.open(Routing.generate("rednose_framework_forms_preview",{id:e.get("id")}),"_blank")},_handleNewDataSource:function(){var e=new DataSourceManager,t=this;e.render(),e.showChoicePage();var n=new Y.Rednose.Panel({srcNode:e.get("container"),width:640});n.render(),e.on("close",function(){e.destroy(),n.destroy()}),e.on("create",function(r){var i=r.model;i.save(function(){e.destroy(),n.destroy(),t._dataSourcesView.render()})})},_handleDataSourceEdit:function(e){var t=e.data,n=new DataSourceManager({model:t}),r=this;n.render(),n.showChoicePage();var i=new Y.Rednose.Panel({srcNode:n.get("container"),width:640});i.render(),n.on("close",function(){n.destroy(),i.destroy()}),n.on("create",function(e){var t=e.model;t.save(function(){n.destroy(),i.destroy(),r._dataSourcesView.render()})})},_handleClose:function(){this.destroy()},_handleDataSourceDelete:function(e){console.log(e)}},{ATTRS:{model:{value:new Y.Rednose.Form.FormModel},navbar:{value:null},routes:{value:[{path:"/:form/edit",callbacks:["handleForm","showForm"]}]}}}),Y.namespace("Rednose.FormDesigner").FormDesigner=FormDesigner},"1.1.0-DEV",{requires:["rednose-app","rednose-datasource-manager","rednose-dialog","rednose-form","rednose-form-designer-css","rednose-navbar","rednose-nodescroll","rednose-treeview"]});
