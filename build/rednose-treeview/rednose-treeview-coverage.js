if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/rednose-treeview/rednose-treeview.js']) {
   __coverage__['build/rednose-treeview/rednose-treeview.js'] = {"path":"build/rednose-treeview/rednose-treeview.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":47}}},"2":{"name":"NodeComparable","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":29}}},"4":{"name":"Comparable","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":22}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":29}}},"6":{"name":"(anonymous_6)","line":120,"loc":{"start":{"line":120,"column":17},"end":{"line":120,"column":35}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":16},"end":{"line":140,"column":28}}},"8":{"name":"(anonymous_8)","line":160,"loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":24}}},"9":{"name":"(anonymous_9)","line":195,"loc":{"start":{"line":195,"column":10},"end":{"line":195,"column":26}}},"10":{"name":"(anonymous_10)","line":238,"loc":{"start":{"line":238,"column":16},"end":{"line":238,"column":39}}},"11":{"name":"(anonymous_11)","line":255,"loc":{"start":{"line":255,"column":29},"end":{"line":255,"column":46}}},"12":{"name":"(anonymous_12)","line":270,"loc":{"start":{"line":270,"column":26},"end":{"line":270,"column":40}}},"13":{"name":"(anonymous_13)","line":276,"loc":{"start":{"line":276,"column":25},"end":{"line":276,"column":37}}},"14":{"name":"(anonymous_14)","line":291,"loc":{"start":{"line":291,"column":25},"end":{"line":291,"column":37}}},"15":{"name":"(anonymous_15)","line":295,"loc":{"start":{"line":295,"column":27},"end":{"line":295,"column":39}}},"16":{"name":"(anonymous_16)","line":300,"loc":{"start":{"line":300,"column":44},"end":{"line":300,"column":60}}},"17":{"name":"(anonymous_17)","line":306,"loc":{"start":{"line":306,"column":27},"end":{"line":306,"column":43}}},"18":{"name":"(anonymous_18)","line":316,"loc":{"start":{"line":316,"column":40},"end":{"line":316,"column":57}}},"19":{"name":"(anonymous_19)","line":328,"loc":{"start":{"line":328,"column":23},"end":{"line":328,"column":35}}},"20":{"name":"(anonymous_20)","line":335,"loc":{"start":{"line":335,"column":24},"end":{"line":335,"column":36}}},"21":{"name":"(anonymous_21)","line":354,"loc":{"start":{"line":354,"column":28},"end":{"line":354,"column":40}}},"22":{"name":"(anonymous_22)","line":369,"loc":{"start":{"line":369,"column":19},"end":{"line":369,"column":32}}},"23":{"name":"(anonymous_23)","line":380,"loc":{"start":{"line":380,"column":19},"end":{"line":380,"column":32}}},"24":{"name":"(anonymous_24)","line":389,"loc":{"start":{"line":389,"column":21},"end":{"line":389,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":419,"column":3}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"3":{"start":{"line":7,"column":0},"end":{"line":35,"column":2}},"4":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"5":{"start":{"line":14,"column":12},"end":{"line":14,"column":21}},"6":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":56}},"8":{"start":{"line":21,"column":8},"end":{"line":27,"column":9}},"9":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"10":{"start":{"line":23,"column":16},"end":{"line":23,"column":26}},"11":{"start":{"line":26,"column":12},"end":{"line":26,"column":45}},"12":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":21}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":41}},"15":{"start":{"line":37,"column":0},"end":{"line":37,"column":61}},"16":{"start":{"line":39,"column":0},"end":{"line":39,"column":24}},"17":{"start":{"line":41,"column":0},"end":{"line":45,"column":2}},"18":{"start":{"line":43,"column":8},"end":{"line":43,"column":89}},"19":{"start":{"line":47,"column":0},"end":{"line":47,"column":52}},"20":{"start":{"line":54,"column":0},"end":{"line":58,"column":44}},"21":{"start":{"line":93,"column":0},"end":{"line":397,"column":3}},"22":{"start":{"line":121,"column":8},"end":{"line":121,"column":32}},"23":{"start":{"line":124,"column":8},"end":{"line":128,"column":9}},"24":{"start":{"line":125,"column":12},"end":{"line":125,"column":53}},"25":{"start":{"line":127,"column":12},"end":{"line":127,"column":44}},"26":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"27":{"start":{"line":131,"column":12},"end":{"line":131,"column":40}},"28":{"start":{"line":135,"column":8},"end":{"line":135,"column":28}},"29":{"start":{"line":137,"column":8},"end":{"line":137,"column":35}},"30":{"start":{"line":141,"column":8},"end":{"line":141,"column":35}},"31":{"start":{"line":144,"column":8},"end":{"line":144,"column":30}},"32":{"start":{"line":147,"column":8},"end":{"line":147,"column":33}},"33":{"start":{"line":161,"column":8},"end":{"line":164,"column":93}},"34":{"start":{"line":166,"column":8},"end":{"line":166,"column":53}},"35":{"start":{"line":167,"column":8},"end":{"line":167,"column":81}},"36":{"start":{"line":170,"column":8},"end":{"line":170,"column":48}},"37":{"start":{"line":171,"column":8},"end":{"line":171,"column":39}},"38":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"39":{"start":{"line":174,"column":12},"end":{"line":174,"column":102}},"40":{"start":{"line":177,"column":8},"end":{"line":180,"column":11}},"41":{"start":{"line":182,"column":8},"end":{"line":182,"column":29}},"42":{"start":{"line":184,"column":8},"end":{"line":184,"column":20}},"43":{"start":{"line":196,"column":8},"end":{"line":198,"column":42}},"44":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"45":{"start":{"line":223,"column":12},"end":{"line":223,"column":47}},"46":{"start":{"line":226,"column":8},"end":{"line":226,"column":25}},"47":{"start":{"line":239,"column":8},"end":{"line":239,"column":22}},"48":{"start":{"line":241,"column":8},"end":{"line":241,"column":27}},"49":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"50":{"start":{"line":244,"column":12},"end":{"line":244,"column":46}},"51":{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},"52":{"start":{"line":257,"column":12},"end":{"line":257,"column":54}},"53":{"start":{"line":260,"column":8},"end":{"line":260,"column":20}},"54":{"start":{"line":271,"column":8},"end":{"line":271,"column":29}},"55":{"start":{"line":277,"column":8},"end":{"line":277,"column":56}},"56":{"start":{"line":281,"column":8},"end":{"line":288,"column":10}},"57":{"start":{"line":292,"column":8},"end":{"line":292,"column":57}},"58":{"start":{"line":296,"column":8},"end":{"line":297,"column":37}},"59":{"start":{"line":299,"column":8},"end":{"line":303,"column":9}},"60":{"start":{"line":300,"column":12},"end":{"line":302,"column":15}},"61":{"start":{"line":301,"column":16},"end":{"line":301,"column":49}},"62":{"start":{"line":307,"column":9},"end":{"line":308,"column":48}},"63":{"start":{"line":310,"column":9},"end":{"line":312,"column":10}},"64":{"start":{"line":311,"column":12},"end":{"line":311,"column":38}},"65":{"start":{"line":315,"column":8},"end":{"line":319,"column":9}},"66":{"start":{"line":316,"column":12},"end":{"line":318,"column":21}},"67":{"start":{"line":317,"column":16},"end":{"line":317,"column":50}},"68":{"start":{"line":329,"column":8},"end":{"line":329,"column":46}},"69":{"start":{"line":330,"column":8},"end":{"line":330,"column":44}},"70":{"start":{"line":336,"column":8},"end":{"line":336,"column":51}},"71":{"start":{"line":340,"column":8},"end":{"line":340,"column":42}},"72":{"start":{"line":344,"column":7},"end":{"line":357,"column":9}},"73":{"start":{"line":345,"column":12},"end":{"line":345,"column":69}},"74":{"start":{"line":347,"column":12},"end":{"line":347,"column":38}},"75":{"start":{"line":349,"column":12},"end":{"line":349,"column":32}},"76":{"start":{"line":354,"column":12},"end":{"line":356,"column":15}},"77":{"start":{"line":355,"column":16},"end":{"line":355,"column":41}},"78":{"start":{"line":360,"column":8},"end":{"line":364,"column":9}},"79":{"start":{"line":362,"column":12},"end":{"line":362,"column":78}},"80":{"start":{"line":363,"column":12},"end":{"line":363,"column":41}},"81":{"start":{"line":366,"column":8},"end":{"line":366,"column":39}},"82":{"start":{"line":370,"column":8},"end":{"line":372,"column":9}},"83":{"start":{"line":371,"column":12},"end":{"line":371,"column":19}},"84":{"start":{"line":374,"column":8},"end":{"line":375,"column":48}},"85":{"start":{"line":377,"column":8},"end":{"line":377,"column":80}},"86":{"start":{"line":381,"column":9},"end":{"line":382,"column":48}},"87":{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},"88":{"start":{"line":385,"column":12},"end":{"line":385,"column":36}},"89":{"start":{"line":390,"column":8},"end":{"line":391,"column":47}},"90":{"start":{"line":393,"column":8},"end":{"line":395,"column":9}},"91":{"start":{"line":394,"column":12},"end":{"line":394,"column":44}},"92":{"start":{"line":400,"column":0},"end":{"line":400,"column":57}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":12},"end":{"line":13,"column":17}},{"start":{"line":13,"column":21},"end":{"line":13,"column":34}},{"start":{"line":13,"column":38},"end":{"line":13,"column":61}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]},"4":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":49},"end":{"line":18,"column":50}},{"start":{"line":18,"column":53},"end":{"line":18,"column":55}}]},"5":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"6":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":12}},{"start":{"line":22,"column":12},"end":{"line":22,"column":12}}]},"7":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"8":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":14}},{"start":{"line":121,"column":19},"end":{"line":121,"column":30}}]},"9":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"10":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"11":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":59},"end":{"line":167,"column":66}},{"start":{"line":167,"column":69},"end":{"line":167,"column":78}}]},"12":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"13":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":8}},{"start":{"line":222,"column":8},"end":{"line":222,"column":8}}]},"14":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":8}},{"start":{"line":243,"column":8},"end":{"line":243,"column":8}}]},"15":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":8}},{"start":{"line":256,"column":8},"end":{"line":256,"column":8}}]},"16":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":26}},{"start":{"line":277,"column":31},"end":{"line":277,"column":54}}]},"17":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":8}},{"start":{"line":299,"column":8},"end":{"line":299,"column":8}}]},"18":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":12},"end":{"line":299,"column":34}},{"start":{"line":299,"column":38},"end":{"line":299,"column":52}},{"start":{"line":299,"column":56},"end":{"line":299,"column":81}}]},"19":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":9},"end":{"line":310,"column":9}},{"start":{"line":310,"column":9},"end":{"line":310,"column":9}}]},"20":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":8},"end":{"line":315,"column":8}},{"start":{"line":315,"column":8},"end":{"line":315,"column":8}}]},"21":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":17}},{"start":{"line":330,"column":21},"end":{"line":330,"column":43}}]},"22":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":7},"end":{"line":344,"column":7}},{"start":{"line":344,"column":7},"end":{"line":344,"column":7}}]},"23":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":8},"end":{"line":360,"column":8}},{"start":{"line":360,"column":8},"end":{"line":360,"column":8}}]},"24":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":8},"end":{"line":366,"column":21}},{"start":{"line":366,"column":25},"end":{"line":366,"column":38}}]},"25":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":8},"end":{"line":370,"column":8}},{"start":{"line":370,"column":8},"end":{"line":370,"column":8}}]},"26":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":8},"end":{"line":384,"column":8}},{"start":{"line":384,"column":8},"end":{"line":384,"column":8}}]},"27":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":8},"end":{"line":393,"column":8}},{"start":{"line":393,"column":8},"end":{"line":393,"column":8}}]}},"code":["(function () { YUI.add('rednose-treeview', function (Y, NAME) {","","/*jshint boss:true, expr:true, onevar:false */","","function NodeComparable() {}","","NodeComparable.prototype = {","    /**","     * @param {Tree.Node} node","     * @return {Number}","     */","    compare: function (node) {","        if (!node || node === this || node.tree !== this.tree) {","            return 0;","        }","","        if (this.depth() === node.depth()) {","            return node.index() < this.index() ? 1 : -1;","        }","","        if (node.depth() > this.depth()) {","            if (node.parent === this) {","                return -1;","            }","","            return this.compare(node.parent);","        }","","        if (node === this.parent) {","            return 1;","        }","","        return this.parent.compare(node);","    }","};","","Y.namespace('Rednose.Tree.Node').Comparable = NodeComparable;","","function Comparable() {}","","Comparable.prototype = {","    initializer: function () {","        this.nodeExtensions = this.nodeExtensions.concat(Y.Rednose.Tree.Node.Comparable);","    }","};","","Y.namespace('Rednose.Tree').Comparable = Comparable;","","/**"," * Provides the `Y.Rednose.TreeView` widget."," *"," * @module rednose-treeview"," */","var CSS_OUTER_CONTAINER = 'rednose-treeview-outer-container',","    CSS_INNER_CONTAINER = 'rednose-treeview-inner-container',","    CSS_TREEVIEW_ICON   = 'rednose-treeview-icon',","","    CSS_BOOTSTRAP_NAV_HEADER = 'nav-header';","","/**"," * A TreeView widget, implementing Y.View."," * Quick Example:<br/>"," *"," * <pre><code>var instance = new Y.Rednose.TreeView({"," *    model     : model,"," *    dragdrop  : true,"," *    selectable: true,"," *    groups    : ['rednose-treeview'],"," *    header    : 'RedNose TreeView'"," * });"," * </code></pre>"," *"," * @class TreeView"," * @namespace Rednose"," * @param {Object} [config] The following configuration properties are required:"," *"," *     @param {Object} [config.container] The container to bind the treeView to."," *     @param {Boolean} [config.dragdrop] Enable standalone drag and drop for this instance."," *     @param {Boolean} [config.selectable] Enables selection of tree nodes. Only single selection"," *         is supported for now"," *     @param {Rednose.ModelTree} [config.model] A RedNose Tree model. Change events are bound to update"," *         the view when the model changes."," *     @param {Array} [config.groups] The DD groups that can interact with this"," *         TreeView instance."," *     @param {String} [config.header] An optional header, needed for global dropping on the root node"," *"," * @constructor"," * @uses Rednose.TreeView.Anim"," * @uses Rednose.TreeView.Selectable"," * @uses Rednose.TreeView.DD"," * @extends TreeView"," */","var TreeView = Y.Base.create('treeView', Y.TreeView, [","    Y.Rednose.Tree.Comparable,","    Y.Rednose.TreeView.Anim,","    Y.Rednose.TreeView.DD,","    Y.Rednose.TreeView.Selectable","], {","","    // -- Public Properties -------------------------------------------------","","    /**","     * Overwrite the default templates used to render this TreeView.","     *","     * @property {Object} templates","     */","    templates: Y.TreeView.Templates,","","    // -- Protected Properties -------------------------------------------------","","    /**","     * Stores the state of the opened tree nodes.","     *","     * @property {Array} _stateMap","     * @protected","     */","","    // -- Lifecycle Methods ----------------------------------------------------","","    initializer: function (config) {","        config || (config = {});","","        // Hook into the initializer chain to set the nodes.","        if (config.model) {","            config.nodes = config.model.get('items');","","            this.set('model', config.model);","        }","","        if (config.header) {","            this.header = config.header;","        }","","        // Initialize the state map so it doesn't contain any garbage from previous instances.","        this._stateMap = [];","","        this._attachEventHandles();","    },","","    destructor: function () {","        this._detachEventHandles();","","        // Free the reference so the property is eligible for garbage collection.","        this._stateMap = null;","","        // Remove the container from the DOM and destroy it.","        this._destroyContainer();","    },","","    // -- Public Methods -------------------------------------------------------","","    /**","     * Overrides TreeView's `render()` method to wrap the container into a parent container,","     * and hook into the rendering process.","     *","     * @method render","     * @chainable","     * @see TreeView.render()","     */","    render: function () {","        var container     = this.get('container'),","            isTouchDevice = 'ontouchstart' in Y.config.win,","            header        = this.header,","            subContainer  = Y.Node.create('<div class=\"' + CSS_INNER_CONTAINER + '\"></div>');","","        container.addClass(this.classNames.treeview);","        container.addClass(this.classNames[isTouchDevice ? 'touch' : 'noTouch']);","","        // Append a subcontainer to render the tree.","        container.addClass(CSS_OUTER_CONTAINER);","        container.append(subContainer);","","        if (header) {","            subContainer.append('<div class=\"' + CSS_BOOTSTRAP_NAV_HEADER + '\">' + header + '</div>');","        }","","        this._childrenNode = this.renderChildren(this.rootNode, {","            // Pass the subcontainer.","            container: subContainer","        });","","        this.rendered = true;","","        return this;","    },","","    /**","     * Return a CSS class string, modified by the given tree node and it's associated model.","     * If no icon is found on the model, the `icon` property of the node will be checked.","     *","     * @method icon","     * @param  {Tree.Node} node Tee Node.","     * @return {String} A composed CSS string.","     */","    icon: function (node) {","        var model     = node.data,","            // icons     = this.get('model').get('icons'),","            className = CSS_TREEVIEW_ICON;","","        // Check the model icon definitions.","        // if (icons && model instanceof Y.Model && icons[model.name] &&","        //     Y.Lang.isString(node.icon) === false","        //     && Y.Lang.isString(model.get('icon')) === false) {","","        //     var icon = icons[model.name];","","        //     if (Y.Lang.isString(icon)) {","        //         return className + ' ' + icon;","        //     }","","        //     if (Y.Lang.isArray(icon)) {","        //         return className + ' ' + (node.isOpen() ? icon[0] : icon[1]);","        //     }","        // }","","        // // Check the icon property on the model.","        // if (Y.Lang.isString(model.get('icon'))) {","        //     return className + ' ' + model.get('icon');","        // }","","        // Check the icon property on the node.","        if (Y.Lang.isString(node.icon)) {","            return className + ' ' + node.icon;","        }","","        return className;","    },","","    /**","     * Renames a treenode","     *","     * @method renameNode","     * @param  {Tree.Node} node Tree node.","     * @param {String} label The new value.","     *","     * @return void","     */","    renameNode: function (node, label) {","        var labelNode;","","        node.label = label;","","        if (labelNode = node._htmlNode.one('.yui3-treeview-label')) {","            labelNode.set('text', node.label);","        }","    },","","    /**","     * Generate a unique RedNose record ID, composed of the class type and the model ID.","     *","     * @method generateRednoseRecordID","     * @param  {Model} model A model instance.","     * @return {String} A unique ID.","     */","    generateRednoseRecordId: function (model) {","        if (model instanceof Y.Model) {","            return model.name + '_' + model.get('id');","        }","","        return null;","    },","","    /**","     * Parse a unique RedNose model id.","     *","     * @method parseRednoseRecordID","     * @param  {String} id A RedNose record ID.","     * @return {Array} An array containing type and ID.","     */","    parseRednoseRecordId: function (id) {","        return id.split('_');","    },","","    // -- Protected Methods ----------------------------------------------------","","    _attachEventHandles: function () {","        this._eventHandles || (this._eventHandles = []);","","        // var model = this.get('model');","","        this._eventHandles.push(","            this.on('open', this._handleExpand, this),","            this.on('close', this._handleCollapse, this),","","            this.after(['open', 'close'], this._handleToggle, this)","","            // model.after('change', this._handleModelChange, this)","        );","    },","","    _detachEventHandles: function () {","        (new Y.EventHandle(this._eventHandles)).detach();","    },","","    _restoreTreeOpenState: function () {","        var self     = this,","            rootNode = this.rootNode;","","        if (rootNode.hasChildren() && this._stateMap && this._stateMap.length > 0) {","            Y.Array.each(rootNode.children, function (node) {","                self._restoreNodeOpenState(node);","            });","        }","    },","","    _restoreNodeOpenState: function (node) {","         var id    = this.generateRednoseRecordId(node.data),","             index = this._stateMap.indexOf(id);","","         if (index !== -1) {","            node.open({silent: true});","         }","","         // Look for child nodes to open, even if their parent is closed.","        if (node.hasChildren()) {","            Y.Array.each(node.children, function (child) {","                this._restoreNodeOpenState(child);","            }, this);","        }","    },","","    /**","     * Removes the `container` from the DOM and purges all its event listeners.","     *","     * @method _destroyContainer","     * @protected","     */","    _destroyContainer: function () {","        var container = this.get('container');","        container && container.remove(true);","    },","","    // -- Protected Event Handlers ---------------------------------------------","","    _handleModelChange: function () {","        var nodes = this.get('model').get('items');","","        // This is a full tree refresh, so handle the tree methods silently, we don't propagate the","        // events to our animation listeners etc.","        this.clear(false, {silent: true});","","        // Clean up, normally this would be handled by the original Treeview's handler, but we are clearing","        // the tree silently.","       if (this.rendered) {","            var childNodes = this.get('container').get('childNodes');","","            delete this._childrenNode;","","            childNodes.remove();","","            // Fix for DD. YUI creates the shims on a 100 ms timer after DD init, so if we destroy","            // the node within 100 ms after initialization, the internal node property points to NULL and","            // we get an error.","            Y.later(150, Y, function () {","                childNodes.destroy(true);","            });","        }","","        // Build a new tree silently, and trigger a new render if needed.","        if (nodes) {","            // Returns an array of references to the created tree nodes.","            treeNodes = this.insertNode(this.rootNode, nodes, {silent: true});","            this._restoreTreeOpenState();","        }","","        this.rendered && this.render();","    },","","    _handleToggle: function (e) {","        if (this.rendered === false) {","            return;","        }","","        var node     = e.node,","            htmlNode = this.getHTMLNode(e.node);","","        htmlNode.one('.' + CSS_TREEVIEW_ICON).set('className', this.icon(node));","    },","","    _handleExpand: function (e) {","         var id    = this.generateRednoseRecordId(e.node.data),","             index = this._stateMap.indexOf(id);","","        if (index === -1) {","            this._stateMap.push(id);","        }","    },","","    _handleCollapse: function (e) {","        var id    = this.generateRednoseRecordId(e.node.data),","            index = this._stateMap.indexOf(id);","","        if (index !== -1) {","            this._stateMap.splice(index, 1);","        }","    }","});","","// -- Namespace ----------------------------------------------------------------","Y.Rednose.TreeView = Y.mix(TreeView, Y.Rednose.TreeView);","","","}, '1.5.0-DEV', {","    \"requires\": [","        \"gallery-sm-treeview\",","        \"rednose-model-tree\",","        \"rednose-tree\",","        \"rednose-treeview-comparable\",","        \"rednose-treeview-anim\",","        \"rednose-treeview-dd\",","        \"rednose-treeview-templates\",","        \"rednose-treeview-select\",","        \"node\"","    ],","    \"supersedes\": [","        \"gallery-sm-treeview-templates\"","    ],","    \"rollup\": 1","});","","}());"]};
}
var __cov_L8V3YQ6yhCTCmhrWDZ$C5w = __coverage__['build/rednose-treeview/rednose-treeview.js'];
__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['1']++;YUI.add('rednose-treeview',function(Y,NAME){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['1']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['2']++;function NodeComparable(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['2']++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['3']++;NodeComparable.prototype={compare:function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['3']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['4']++;if((__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['2'][0]++,!node)||(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['2'][1]++,node===this)||(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['2'][2]++,node.tree!==this.tree)){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['1'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['5']++;return 0;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['1'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['6']++;if(this.depth()===node.depth()){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['3'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['7']++;return node.index()<this.index()?(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['4'][0]++,1):(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['4'][1]++,-1);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['3'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['8']++;if(node.depth()>this.depth()){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['5'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['9']++;if(node.parent===this){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['6'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['10']++;return-1;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['6'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['11']++;return this.compare(node.parent);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['5'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['12']++;if(node===this.parent){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['7'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['13']++;return 1;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['7'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['14']++;return this.parent.compare(node);}};__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['15']++;Y.namespace('Rednose.Tree.Node').Comparable=NodeComparable;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['16']++;function Comparable(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['4']++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['17']++;Comparable.prototype={initializer:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['5']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['18']++;this.nodeExtensions=this.nodeExtensions.concat(Y.Rednose.Tree.Node.Comparable);}};__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['19']++;Y.namespace('Rednose.Tree').Comparable=Comparable;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['20']++;var CSS_OUTER_CONTAINER='rednose-treeview-outer-container',CSS_INNER_CONTAINER='rednose-treeview-inner-container',CSS_TREEVIEW_ICON='rednose-treeview-icon',CSS_BOOTSTRAP_NAV_HEADER='nav-header';__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['21']++;var TreeView=Y.Base.create('treeView',Y.TreeView,[Y.Rednose.Tree.Comparable,Y.Rednose.TreeView.Anim,Y.Rednose.TreeView.DD,Y.Rednose.TreeView.Selectable],{templates:Y.TreeView.Templates,initializer:function(config){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['6']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['22']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['8'][0]++,config)||(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['8'][1]++,config={});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['23']++;if(config.model){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['9'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['24']++;config.nodes=config.model.get('items');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['25']++;this.set('model',config.model);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['9'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['26']++;if(config.header){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['10'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['27']++;this.header=config.header;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['10'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['28']++;this._stateMap=[];__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['29']++;this._attachEventHandles();},destructor:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['7']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['30']++;this._detachEventHandles();__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['31']++;this._stateMap=null;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['32']++;this._destroyContainer();},render:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['8']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['33']++;var container=this.get('container'),isTouchDevice='ontouchstart'in Y.config.win,header=this.header,subContainer=Y.Node.create('<div class="'+CSS_INNER_CONTAINER+'"></div>');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['34']++;container.addClass(this.classNames.treeview);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['35']++;container.addClass(this.classNames[isTouchDevice?(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['11'][0]++,'touch'):(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['11'][1]++,'noTouch')]);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['36']++;container.addClass(CSS_OUTER_CONTAINER);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['37']++;container.append(subContainer);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['38']++;if(header){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['12'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['39']++;subContainer.append('<div class="'+CSS_BOOTSTRAP_NAV_HEADER+'">'+header+'</div>');}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['12'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['40']++;this._childrenNode=this.renderChildren(this.rootNode,{container:subContainer});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['41']++;this.rendered=true;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['42']++;return this;},icon:function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['9']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['43']++;var model=node.data,className=CSS_TREEVIEW_ICON;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['44']++;if(Y.Lang.isString(node.icon)){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['13'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['45']++;return className+' '+node.icon;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['13'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['46']++;return className;},renameNode:function(node,label){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['10']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['47']++;var labelNode;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['48']++;node.label=label;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['49']++;if(labelNode=node._htmlNode.one('.yui3-treeview-label')){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['14'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['50']++;labelNode.set('text',node.label);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['14'][1]++;}},generateRednoseRecordId:function(model){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['11']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['51']++;if(model instanceof Y.Model){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['15'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['52']++;return model.name+'_'+model.get('id');}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['15'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['53']++;return null;},parseRednoseRecordId:function(id){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['12']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['54']++;return id.split('_');},_attachEventHandles:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['13']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['55']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['16'][0]++,this._eventHandles)||(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['16'][1]++,this._eventHandles=[]);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['56']++;this._eventHandles.push(this.on('open',this._handleExpand,this),this.on('close',this._handleCollapse,this),this.after(['open','close'],this._handleToggle,this));},_detachEventHandles:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['14']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['57']++;new Y.EventHandle(this._eventHandles).detach();},_restoreTreeOpenState:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['15']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['58']++;var self=this,rootNode=this.rootNode;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['59']++;if((__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['18'][0]++,rootNode.hasChildren())&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['18'][1]++,this._stateMap)&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['18'][2]++,this._stateMap.length>0)){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['17'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['60']++;Y.Array.each(rootNode.children,function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['16']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['61']++;self._restoreNodeOpenState(node);});}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['17'][1]++;}},_restoreNodeOpenState:function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['17']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['62']++;var id=this.generateRednoseRecordId(node.data),index=this._stateMap.indexOf(id);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['63']++;if(index!==-1){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['19'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['64']++;node.open({silent:true});}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['19'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['65']++;if(node.hasChildren()){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['20'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['66']++;Y.Array.each(node.children,function(child){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['18']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['67']++;this._restoreNodeOpenState(child);},this);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['20'][1]++;}},_destroyContainer:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['19']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['68']++;var container=this.get('container');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['69']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['21'][0]++,container)&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['21'][1]++,container.remove(true));},_handleModelChange:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['20']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['70']++;var nodes=this.get('model').get('items');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['71']++;this.clear(false,{silent:true});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['72']++;if(this.rendered){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['22'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['73']++;var childNodes=this.get('container').get('childNodes');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['74']++;delete this._childrenNode;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['75']++;childNodes.remove();__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['76']++;Y.later(150,Y,function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['21']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['77']++;childNodes.destroy(true);});}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['22'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['78']++;if(nodes){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['23'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['79']++;treeNodes=this.insertNode(this.rootNode,nodes,{silent:true});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['80']++;this._restoreTreeOpenState();}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['23'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['81']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['24'][0]++,this.rendered)&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['24'][1]++,this.render());},_handleToggle:function(e){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['22']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['82']++;if(this.rendered===false){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['25'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['83']++;return;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['25'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['84']++;var node=e.node,htmlNode=this.getHTMLNode(e.node);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['85']++;htmlNode.one('.'+CSS_TREEVIEW_ICON).set('className',this.icon(node));},_handleExpand:function(e){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['23']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['86']++;var id=this.generateRednoseRecordId(e.node.data),index=this._stateMap.indexOf(id);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['87']++;if(index===-1){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['26'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['88']++;this._stateMap.push(id);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['26'][1]++;}},_handleCollapse:function(e){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['24']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['89']++;var id=this.generateRednoseRecordId(e.node.data),index=this._stateMap.indexOf(id);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['90']++;if(index!==-1){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['27'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['91']++;this._stateMap.splice(index,1);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['27'][1]++;}}});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['92']++;Y.Rednose.TreeView=Y.mix(TreeView,Y.Rednose.TreeView);},'1.5.0-DEV',{'requires':['gallery-sm-treeview','rednose-model-tree','rednose-tree','rednose-treeview-comparable','rednose-treeview-anim','rednose-treeview-dd','rednose-treeview-templates','rednose-treeview-select','node'],'supersedes':['gallery-sm-treeview-templates'],'rollup':1});
