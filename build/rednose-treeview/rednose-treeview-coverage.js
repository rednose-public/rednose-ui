if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/rednose-treeview/rednose-treeview.js']) {
   __coverage__['build/rednose-treeview/rednose-treeview.js'] = {"path":"build/rednose-treeview/rednose-treeview.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":47}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":17},"end":{"line":76,"column":35}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":16},"end":{"line":96,"column":28}}},"4":{"name":"(anonymous_4)","line":116,"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":24}}},"5":{"name":"(anonymous_5)","line":151,"loc":{"start":{"line":151,"column":10},"end":{"line":151,"column":26}}},"6":{"name":"(anonymous_6)","line":198,"loc":{"start":{"line":198,"column":16},"end":{"line":198,"column":39}}},"7":{"name":"(anonymous_7)","line":215,"loc":{"start":{"line":215,"column":29},"end":{"line":215,"column":46}}},"8":{"name":"(anonymous_8)","line":230,"loc":{"start":{"line":230,"column":26},"end":{"line":230,"column":40}}},"9":{"name":"(anonymous_9)","line":236,"loc":{"start":{"line":236,"column":25},"end":{"line":236,"column":37}}},"10":{"name":"(anonymous_10)","line":251,"loc":{"start":{"line":251,"column":25},"end":{"line":251,"column":37}}},"11":{"name":"(anonymous_11)","line":255,"loc":{"start":{"line":255,"column":27},"end":{"line":255,"column":39}}},"12":{"name":"(anonymous_12)","line":260,"loc":{"start":{"line":260,"column":44},"end":{"line":260,"column":60}}},"13":{"name":"(anonymous_13)","line":266,"loc":{"start":{"line":266,"column":27},"end":{"line":266,"column":43}}},"14":{"name":"(anonymous_14)","line":276,"loc":{"start":{"line":276,"column":40},"end":{"line":276,"column":57}}},"15":{"name":"(anonymous_15)","line":288,"loc":{"start":{"line":288,"column":23},"end":{"line":288,"column":35}}},"16":{"name":"(anonymous_16)","line":295,"loc":{"start":{"line":295,"column":24},"end":{"line":295,"column":36}}},"17":{"name":"(anonymous_17)","line":314,"loc":{"start":{"line":314,"column":28},"end":{"line":314,"column":40}}},"18":{"name":"(anonymous_18)","line":329,"loc":{"start":{"line":329,"column":19},"end":{"line":329,"column":32}}},"19":{"name":"(anonymous_19)","line":340,"loc":{"start":{"line":340,"column":19},"end":{"line":340,"column":32}}},"20":{"name":"(anonymous_20)","line":349,"loc":{"start":{"line":349,"column":21},"end":{"line":349,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":378,"column":3}},"2":{"start":{"line":10,"column":0},"end":{"line":14,"column":44}},"3":{"start":{"line":49,"column":0},"end":{"line":357,"column":3}},"4":{"start":{"line":77,"column":8},"end":{"line":77,"column":32}},"5":{"start":{"line":80,"column":8},"end":{"line":84,"column":9}},"6":{"start":{"line":81,"column":12},"end":{"line":81,"column":53}},"7":{"start":{"line":83,"column":12},"end":{"line":83,"column":44}},"8":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"9":{"start":{"line":87,"column":12},"end":{"line":87,"column":40}},"10":{"start":{"line":91,"column":8},"end":{"line":91,"column":28}},"11":{"start":{"line":93,"column":8},"end":{"line":93,"column":35}},"12":{"start":{"line":97,"column":8},"end":{"line":97,"column":35}},"13":{"start":{"line":100,"column":8},"end":{"line":100,"column":30}},"14":{"start":{"line":103,"column":8},"end":{"line":103,"column":33}},"15":{"start":{"line":117,"column":8},"end":{"line":120,"column":93}},"16":{"start":{"line":122,"column":8},"end":{"line":122,"column":53}},"17":{"start":{"line":123,"column":8},"end":{"line":123,"column":81}},"18":{"start":{"line":126,"column":8},"end":{"line":126,"column":48}},"19":{"start":{"line":127,"column":8},"end":{"line":127,"column":39}},"20":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"21":{"start":{"line":130,"column":12},"end":{"line":130,"column":102}},"22":{"start":{"line":133,"column":8},"end":{"line":136,"column":11}},"23":{"start":{"line":138,"column":8},"end":{"line":138,"column":29}},"24":{"start":{"line":140,"column":8},"end":{"line":140,"column":20}},"25":{"start":{"line":152,"column":8},"end":{"line":152,"column":42}},"26":{"start":{"line":178,"column":8},"end":{"line":184,"column":9}},"27":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"28":{"start":{"line":180,"column":16},"end":{"line":180,"column":87}},"29":{"start":{"line":183,"column":12},"end":{"line":183,"column":47}},"30":{"start":{"line":186,"column":8},"end":{"line":186,"column":25}},"31":{"start":{"line":199,"column":8},"end":{"line":199,"column":22}},"32":{"start":{"line":201,"column":8},"end":{"line":201,"column":27}},"33":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"34":{"start":{"line":204,"column":12},"end":{"line":204,"column":46}},"35":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"36":{"start":{"line":217,"column":12},"end":{"line":217,"column":54}},"37":{"start":{"line":220,"column":8},"end":{"line":220,"column":20}},"38":{"start":{"line":231,"column":8},"end":{"line":231,"column":29}},"39":{"start":{"line":237,"column":8},"end":{"line":237,"column":56}},"40":{"start":{"line":241,"column":8},"end":{"line":248,"column":10}},"41":{"start":{"line":252,"column":8},"end":{"line":252,"column":57}},"42":{"start":{"line":256,"column":8},"end":{"line":257,"column":37}},"43":{"start":{"line":259,"column":8},"end":{"line":263,"column":9}},"44":{"start":{"line":260,"column":12},"end":{"line":262,"column":15}},"45":{"start":{"line":261,"column":16},"end":{"line":261,"column":49}},"46":{"start":{"line":267,"column":9},"end":{"line":268,"column":48}},"47":{"start":{"line":270,"column":9},"end":{"line":272,"column":10}},"48":{"start":{"line":271,"column":12},"end":{"line":271,"column":38}},"49":{"start":{"line":275,"column":8},"end":{"line":279,"column":9}},"50":{"start":{"line":276,"column":12},"end":{"line":278,"column":21}},"51":{"start":{"line":277,"column":16},"end":{"line":277,"column":50}},"52":{"start":{"line":289,"column":8},"end":{"line":289,"column":46}},"53":{"start":{"line":290,"column":8},"end":{"line":290,"column":44}},"54":{"start":{"line":296,"column":8},"end":{"line":296,"column":51}},"55":{"start":{"line":300,"column":8},"end":{"line":300,"column":42}},"56":{"start":{"line":304,"column":7},"end":{"line":317,"column":9}},"57":{"start":{"line":305,"column":12},"end":{"line":305,"column":69}},"58":{"start":{"line":307,"column":12},"end":{"line":307,"column":38}},"59":{"start":{"line":309,"column":12},"end":{"line":309,"column":32}},"60":{"start":{"line":314,"column":12},"end":{"line":316,"column":15}},"61":{"start":{"line":315,"column":16},"end":{"line":315,"column":41}},"62":{"start":{"line":320,"column":8},"end":{"line":324,"column":9}},"63":{"start":{"line":322,"column":12},"end":{"line":322,"column":78}},"64":{"start":{"line":323,"column":12},"end":{"line":323,"column":41}},"65":{"start":{"line":326,"column":8},"end":{"line":326,"column":39}},"66":{"start":{"line":330,"column":8},"end":{"line":332,"column":9}},"67":{"start":{"line":331,"column":12},"end":{"line":331,"column":19}},"68":{"start":{"line":334,"column":8},"end":{"line":335,"column":48}},"69":{"start":{"line":337,"column":8},"end":{"line":337,"column":80}},"70":{"start":{"line":341,"column":9},"end":{"line":342,"column":48}},"71":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"72":{"start":{"line":345,"column":12},"end":{"line":345,"column":36}},"73":{"start":{"line":350,"column":8},"end":{"line":351,"column":47}},"74":{"start":{"line":353,"column":8},"end":{"line":355,"column":9}},"75":{"start":{"line":354,"column":12},"end":{"line":354,"column":44}},"76":{"start":{"line":360,"column":0},"end":{"line":360,"column":57}}},"branchMap":{"1":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":14}},{"start":{"line":77,"column":19},"end":{"line":77,"column":30}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"3":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"4":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":59},"end":{"line":123,"column":66}},{"start":{"line":123,"column":69},"end":{"line":123,"column":78}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":8}},{"start":{"line":129,"column":8},"end":{"line":129,"column":8}}]},"6":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"7":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":12},"end":{"line":179,"column":12}},{"start":{"line":179,"column":12},"end":{"line":179,"column":12}}]},"8":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":58},"end":{"line":180,"column":70}},{"start":{"line":180,"column":73},"end":{"line":180,"column":85}}]},"9":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"10":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"11":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":26}},{"start":{"line":237,"column":31},"end":{"line":237,"column":54}}]},"12":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":259,"column":8}},{"start":{"line":259,"column":8},"end":{"line":259,"column":8}}]},"13":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":34}},{"start":{"line":259,"column":38},"end":{"line":259,"column":52}},{"start":{"line":259,"column":56},"end":{"line":259,"column":81}}]},"14":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":9},"end":{"line":270,"column":9}},{"start":{"line":270,"column":9},"end":{"line":270,"column":9}}]},"15":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":8}},{"start":{"line":275,"column":8},"end":{"line":275,"column":8}}]},"16":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":8},"end":{"line":290,"column":17}},{"start":{"line":290,"column":21},"end":{"line":290,"column":43}}]},"17":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":7},"end":{"line":304,"column":7}},{"start":{"line":304,"column":7},"end":{"line":304,"column":7}}]},"18":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":8},"end":{"line":320,"column":8}},{"start":{"line":320,"column":8},"end":{"line":320,"column":8}}]},"19":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":8},"end":{"line":326,"column":21}},{"start":{"line":326,"column":25},"end":{"line":326,"column":38}}]},"20":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":8}},{"start":{"line":330,"column":8},"end":{"line":330,"column":8}}]},"21":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":344,"column":8}},{"start":{"line":344,"column":8},"end":{"line":344,"column":8}}]},"22":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":8},"end":{"line":353,"column":8}},{"start":{"line":353,"column":8},"end":{"line":353,"column":8}}]}},"code":["(function () { YUI.add('rednose-treeview', function (Y, NAME) {","","/*jshint boss:true, expr:true, onevar:false */","","/**"," * Provides the `Y.Rednose.TreeView` widget."," *"," * @module rednose-treeview"," */","var CSS_OUTER_CONTAINER = 'rednose-treeview-outer-container',","    CSS_INNER_CONTAINER = 'rednose-treeview-inner-container',","    CSS_TREEVIEW_ICON   = 'rednose-treeview-icon',","","    CSS_BOOTSTRAP_NAV_HEADER = 'nav-header';","","/**"," * A TreeView widget, implementing Y.View."," * Quick Example:<br/>"," *"," * <pre><code>var instance = new Y.Rednose.TreeView({"," *    model     : model,"," *    dragdrop  : true,"," *    selectable: true,"," *    groups    : ['rednose-treeview'],"," *    header    : 'RedNose TreeView'"," * });"," * </code></pre>"," *"," * @class TreeView"," * @namespace Rednose"," * @param {Object} [config] The following configuration properties are required:"," *"," *     @param {Object} [config.container] The container to bind the treeView to."," *     @param {Boolean} [config.dragdrop] Enable standalone drag and drop for this instance."," *     @param {Boolean} [config.selectable] Enables selection of tree nodes. Only single selection"," *         is supported for now"," *     @param {Rednose.ModelTree} [config.model] A RedNose Tree model. Change events are bound to update"," *         the view when the model changes."," *     @param {Array} [config.groups] The DD groups that can interact with this"," *         TreeView instance."," *     @param {String} [config.header] An optional header, needed for global dropping on the root node"," *"," * @constructor"," * @uses Rednose.TreeView.Anim"," * @uses Rednose.TreeView.Selectable"," * @uses Rednose.TreeView.DD"," * @extends TreeView"," */","var TreeView = Y.Base.create('treeView', Y.TreeView, [","    Y.Rednose.Tree.Comparable,","    Y.Rednose.TreeView.Anim,","    Y.Rednose.TreeView.DD,","    Y.Rednose.TreeView.Selectable","], {","","    // -- Public Properties -------------------------------------------------","","    /**","     * Overwrite the default templates used to render this TreeView.","     *","     * @property {Object} templates","     */","    templates: Y.TreeView.Templates,","","    // -- Protected Properties -------------------------------------------------","","    /**","     * Stores the state of the opened tree nodes.","     *","     * @property {Array} _stateMap","     * @protected","     */","","    // -- Lifecycle Methods ----------------------------------------------------","","    initializer: function (config) {","        config || (config = {});","","        // Hook into the initializer chain to set the nodes.","        if (config.model) {","            config.nodes = config.model.get('items');","","            this.set('model', config.model);","        }","","        if (config.header) {","            this.header = config.header;","        }","","        // Initialize the state map so it doesn't contain any garbage from previous instances.","        this._stateMap = [];","","        this._attachEventHandles();","    },","","    destructor: function () {","        this._detachEventHandles();","","        // Free the reference so the property is eligible for garbage collection.","        this._stateMap = null;","","        // Remove the container from the DOM and destroy it.","        this._destroyContainer();","    },","","    // -- Public Methods -------------------------------------------------------","","    /**","     * Overrides TreeView's `render()` method to wrap the container into a parent container,","     * and hook into the rendering process.","     *","     * @method render","     * @chainable","     * @see TreeView.render()","     */","    render: function () {","        var container     = this.get('container'),","            isTouchDevice = 'ontouchstart' in Y.config.win,","            header        = this.header,","            subContainer  = Y.Node.create('<div class=\"' + CSS_INNER_CONTAINER + '\"></div>');","","        container.addClass(this.classNames.treeview);","        container.addClass(this.classNames[isTouchDevice ? 'touch' : 'noTouch']);","","        // Append a subcontainer to render the tree.","        container.addClass(CSS_OUTER_CONTAINER);","        container.append(subContainer);","","        if (header) {","            subContainer.append('<div class=\"' + CSS_BOOTSTRAP_NAV_HEADER + '\">' + header + '</div>');","        }","","        this._childrenNode = this.renderChildren(this.rootNode, {","            // Pass the subcontainer.","            container: subContainer","        });","","        this.rendered = true;","","        return this;","    },","","    /**","     * Return a CSS class string, modified by the given tree node and it's associated model.","     * If no icon is found on the model, the `icon` property of the node will be checked.","     *","     * @method icon","     * @param  {Tree.Node} node Tee Node.","     * @return {String} A composed CSS string.","     */","    icon: function (node) {","        var className = CSS_TREEVIEW_ICON;","        // var model     = node.data,","            // icons     = this.get('model').get('icons'),","            // className = CSS_TREEVIEW_ICON;","","        // Check the model icon definitions.","        // if (icons && model instanceof Y.Model && icons[model.name] &&","        //     Y.Lang.isString(node.icon) === false","        //     && Y.Lang.isString(model.get('icon')) === false) {","","        //     var icon = icons[model.name];","","        //     if (Y.Lang.isString(icon)) {","        //         return className + ' ' + icon;","        //     }","","        //     if (Y.Lang.isArray(icon)) {","        //         return className + ' ' + (node.isOpen() ? icon[0] : icon[1]);","        //     }","        // }","","        // // Check the icon property on the model.","        // if (Y.Lang.isString(model.get('icon'))) {","        //     return className + ' ' + model.get('icon');","        // }","","        if (node.icon) {","            if (Y.Lang.isArray(node.icon)) {","                return className + ' ' + (node.isOpen() ? node.icon[0] : node.icon[1]);","            }","","            return className + ' ' + node.icon;","        }","","        return className;","    },","","    /**","     * Renames a treenode","     *","     * @method renameNode","     * @param  {Tree.Node} node Tree node.","     * @param {String} label The new value.","     *","     * @return void","     */","    renameNode: function (node, label) {","        var labelNode;","","        node.label = label;","","        if (labelNode = node._htmlNode.one('.yui3-treeview-label')) {","            labelNode.set('text', node.label);","        }","    },","","    /**","     * Generate a unique RedNose record ID, composed of the class type and the model ID.","     *","     * @method generateRednoseRecordID","     * @param  {Model} model A model instance.","     * @return {String} A unique ID.","     */","    generateRednoseRecordId: function (model) {","        if (model instanceof Y.Model) {","            return model.name + '_' + model.get('id');","        }","","        return null;","    },","","    /**","     * Parse a unique RedNose model id.","     *","     * @method parseRednoseRecordID","     * @param  {String} id A RedNose record ID.","     * @return {Array} An array containing type and ID.","     */","    parseRednoseRecordId: function (id) {","        return id.split('_');","    },","","    // -- Protected Methods ----------------------------------------------------","","    _attachEventHandles: function () {","        this._eventHandles || (this._eventHandles = []);","","        // var model = this.get('model');","","        this._eventHandles.push(","            this.on('open', this._handleExpand, this),","            this.on('close', this._handleCollapse, this),","","            this.after(['open', 'close'], this._handleToggle, this)","","            // model.after('change', this._handleModelChange, this)","        );","    },","","    _detachEventHandles: function () {","        (new Y.EventHandle(this._eventHandles)).detach();","    },","","    _restoreTreeOpenState: function () {","        var self     = this,","            rootNode = this.rootNode;","","        if (rootNode.hasChildren() && this._stateMap && this._stateMap.length > 0) {","            Y.Array.each(rootNode.children, function (node) {","                self._restoreNodeOpenState(node);","            });","        }","    },","","    _restoreNodeOpenState: function (node) {","         var id    = this.generateRednoseRecordId(node.data),","             index = this._stateMap.indexOf(id);","","         if (index !== -1) {","            node.open({silent: true});","         }","","         // Look for child nodes to open, even if their parent is closed.","        if (node.hasChildren()) {","            Y.Array.each(node.children, function (child) {","                this._restoreNodeOpenState(child);","            }, this);","        }","    },","","    /**","     * Removes the `container` from the DOM and purges all its event listeners.","     *","     * @method _destroyContainer","     * @protected","     */","    _destroyContainer: function () {","        var container = this.get('container');","        container && container.remove(true);","    },","","    // -- Protected Event Handlers ---------------------------------------------","","    _handleModelChange: function () {","        var nodes = this.get('model').get('items');","","        // This is a full tree refresh, so handle the tree methods silently, we don't propagate the","        // events to our animation listeners etc.","        this.clear(false, {silent: true});","","        // Clean up, normally this would be handled by the original Treeview's handler, but we are clearing","        // the tree silently.","       if (this.rendered) {","            var childNodes = this.get('container').get('childNodes');","","            delete this._childrenNode;","","            childNodes.remove();","","            // Fix for DD. YUI creates the shims on a 100 ms timer after DD init, so if we destroy","            // the node within 100 ms after initialization, the internal node property points to NULL and","            // we get an error.","            Y.later(150, Y, function () {","                childNodes.destroy(true);","            });","        }","","        // Build a new tree silently, and trigger a new render if needed.","        if (nodes) {","            // Returns an array of references to the created tree nodes.","            treeNodes = this.insertNode(this.rootNode, nodes, {silent: true});","            this._restoreTreeOpenState();","        }","","        this.rendered && this.render();","    },","","    _handleToggle: function (e) {","        if (this.rendered === false) {","            return;","        }","","        var node     = e.node,","            htmlNode = this.getHTMLNode(e.node);","","        htmlNode.one('.' + CSS_TREEVIEW_ICON).set('className', this.icon(node));","    },","","    _handleExpand: function (e) {","         var id    = this.generateRednoseRecordId(e.node.data),","             index = this._stateMap.indexOf(id);","","        if (index === -1) {","            this._stateMap.push(id);","        }","    },","","    _handleCollapse: function (e) {","        var id    = this.generateRednoseRecordId(e.node.data),","            index = this._stateMap.indexOf(id);","","        if (index !== -1) {","            this._stateMap.splice(index, 1);","        }","    }","});","","// -- Namespace ----------------------------------------------------------------","Y.Rednose.TreeView = Y.mix(TreeView, Y.Rednose.TreeView);","","","}, '1.5.0-DEV', {","    \"requires\": [","        \"gallery-sm-treeview\",","        \"rednose-model-tree\",","        \"rednose-tree\",","        \"rednose-treeview-anim\",","        \"rednose-treeview-dd\",","        \"rednose-treeview-templates\",","        \"rednose-treeview-select\",","        \"node\"","    ],","    \"supersedes\": [","        \"gallery-sm-treeview-templates\"","    ],","    \"rollup\": 1","});","","}());"]};
}
var __cov_L8V3YQ6yhCTCmhrWDZ$C5w = __coverage__['build/rednose-treeview/rednose-treeview.js'];
__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['1']++;YUI.add('rednose-treeview',function(Y,NAME){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['1']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['2']++;var CSS_OUTER_CONTAINER='rednose-treeview-outer-container',CSS_INNER_CONTAINER='rednose-treeview-inner-container',CSS_TREEVIEW_ICON='rednose-treeview-icon',CSS_BOOTSTRAP_NAV_HEADER='nav-header';__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['3']++;var TreeView=Y.Base.create('treeView',Y.TreeView,[Y.Rednose.Tree.Comparable,Y.Rednose.TreeView.Anim,Y.Rednose.TreeView.DD,Y.Rednose.TreeView.Selectable],{templates:Y.TreeView.Templates,initializer:function(config){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['2']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['4']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['1'][0]++,config)||(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['1'][1]++,config={});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['5']++;if(config.model){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['2'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['6']++;config.nodes=config.model.get('items');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['7']++;this.set('model',config.model);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['2'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['8']++;if(config.header){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['3'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['9']++;this.header=config.header;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['3'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['10']++;this._stateMap=[];__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['11']++;this._attachEventHandles();},destructor:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['3']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['12']++;this._detachEventHandles();__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['13']++;this._stateMap=null;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['14']++;this._destroyContainer();},render:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['4']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['15']++;var container=this.get('container'),isTouchDevice='ontouchstart'in Y.config.win,header=this.header,subContainer=Y.Node.create('<div class="'+CSS_INNER_CONTAINER+'"></div>');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['16']++;container.addClass(this.classNames.treeview);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['17']++;container.addClass(this.classNames[isTouchDevice?(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['4'][0]++,'touch'):(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['4'][1]++,'noTouch')]);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['18']++;container.addClass(CSS_OUTER_CONTAINER);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['19']++;container.append(subContainer);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['20']++;if(header){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['5'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['21']++;subContainer.append('<div class="'+CSS_BOOTSTRAP_NAV_HEADER+'">'+header+'</div>');}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['5'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['22']++;this._childrenNode=this.renderChildren(this.rootNode,{container:subContainer});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['23']++;this.rendered=true;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['24']++;return this;},icon:function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['5']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['25']++;var className=CSS_TREEVIEW_ICON;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['26']++;if(node.icon){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['6'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['27']++;if(Y.Lang.isArray(node.icon)){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['7'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['28']++;return className+' '+(node.isOpen()?(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['8'][0]++,node.icon[0]):(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['8'][1]++,node.icon[1]));}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['7'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['29']++;return className+' '+node.icon;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['6'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['30']++;return className;},renameNode:function(node,label){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['6']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['31']++;var labelNode;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['32']++;node.label=label;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['33']++;if(labelNode=node._htmlNode.one('.yui3-treeview-label')){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['9'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['34']++;labelNode.set('text',node.label);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['9'][1]++;}},generateRednoseRecordId:function(model){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['7']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['35']++;if(model instanceof Y.Model){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['10'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['36']++;return model.name+'_'+model.get('id');}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['10'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['37']++;return null;},parseRednoseRecordId:function(id){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['8']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['38']++;return id.split('_');},_attachEventHandles:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['9']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['39']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['11'][0]++,this._eventHandles)||(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['11'][1]++,this._eventHandles=[]);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['40']++;this._eventHandles.push(this.on('open',this._handleExpand,this),this.on('close',this._handleCollapse,this),this.after(['open','close'],this._handleToggle,this));},_detachEventHandles:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['10']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['41']++;new Y.EventHandle(this._eventHandles).detach();},_restoreTreeOpenState:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['11']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['42']++;var self=this,rootNode=this.rootNode;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['43']++;if((__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['13'][0]++,rootNode.hasChildren())&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['13'][1]++,this._stateMap)&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['13'][2]++,this._stateMap.length>0)){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['12'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['44']++;Y.Array.each(rootNode.children,function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['12']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['45']++;self._restoreNodeOpenState(node);});}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['12'][1]++;}},_restoreNodeOpenState:function(node){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['13']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['46']++;var id=this.generateRednoseRecordId(node.data),index=this._stateMap.indexOf(id);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['47']++;if(index!==-1){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['14'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['48']++;node.open({silent:true});}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['14'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['49']++;if(node.hasChildren()){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['15'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['50']++;Y.Array.each(node.children,function(child){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['14']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['51']++;this._restoreNodeOpenState(child);},this);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['15'][1]++;}},_destroyContainer:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['15']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['52']++;var container=this.get('container');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['53']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['16'][0]++,container)&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['16'][1]++,container.remove(true));},_handleModelChange:function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['16']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['54']++;var nodes=this.get('model').get('items');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['55']++;this.clear(false,{silent:true});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['56']++;if(this.rendered){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['17'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['57']++;var childNodes=this.get('container').get('childNodes');__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['58']++;delete this._childrenNode;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['59']++;childNodes.remove();__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['60']++;Y.later(150,Y,function(){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['17']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['61']++;childNodes.destroy(true);});}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['17'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['62']++;if(nodes){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['18'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['63']++;treeNodes=this.insertNode(this.rootNode,nodes,{silent:true});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['64']++;this._restoreTreeOpenState();}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['18'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['65']++;(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['19'][0]++,this.rendered)&&(__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['19'][1]++,this.render());},_handleToggle:function(e){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['18']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['66']++;if(this.rendered===false){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['20'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['67']++;return;}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['20'][1]++;}__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['68']++;var node=e.node,htmlNode=this.getHTMLNode(e.node);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['69']++;htmlNode.one('.'+CSS_TREEVIEW_ICON).set('className',this.icon(node));},_handleExpand:function(e){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['19']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['70']++;var id=this.generateRednoseRecordId(e.node.data),index=this._stateMap.indexOf(id);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['71']++;if(index===-1){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['21'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['72']++;this._stateMap.push(id);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['21'][1]++;}},_handleCollapse:function(e){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.f['20']++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['73']++;var id=this.generateRednoseRecordId(e.node.data),index=this._stateMap.indexOf(id);__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['74']++;if(index!==-1){__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['22'][0]++;__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['75']++;this._stateMap.splice(index,1);}else{__cov_L8V3YQ6yhCTCmhrWDZ$C5w.b['22'][1]++;}}});__cov_L8V3YQ6yhCTCmhrWDZ$C5w.s['76']++;Y.Rednose.TreeView=Y.mix(TreeView,Y.Rednose.TreeView);},'1.5.0-DEV',{'requires':['gallery-sm-treeview','rednose-model-tree','rednose-tree','rednose-treeview-anim','rednose-treeview-dd','rednose-treeview-templates','rednose-treeview-select','node'],'supersedes':['gallery-sm-treeview-templates'],'rollup':1});
